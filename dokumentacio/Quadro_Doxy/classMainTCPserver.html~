<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<title>quadro copter: MainTCPserver Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">quadro copter
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.html"><span>Class&#160;List</span></a></li>
      <li><a href="classes.html"><span>Class&#160;Index</span></a></li>
      <li><a href="functions.html"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-static-methods">Static Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classMainTCPserver-members.html">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">MainTCPserver Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="TCP__server_8h_source.html">TCP_server.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aef457361bedaa032377a04bd12e6c6e6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMainTCPserver.html#aef457361bedaa032377a04bd12e6c6e6">MainTCPserver</a> (int port)</td></tr>
<tr class="separator:aef457361bedaa032377a04bd12e6c6e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac913d78d1e58776e4590d69d9d7e57e2"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMainTCPserver.html#ac913d78d1e58776e4590d69d9d7e57e2">start_listening</a> (void)</td></tr>
<tr class="separator:ac913d78d1e58776e4590d69d9d7e57e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a981dcda43bf33431e04396d7a0f63a0e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMainTCPserver.html#a981dcda43bf33431e04396d7a0f63a0e">stop_listening</a> (void)</td></tr>
<tr class="separator:a981dcda43bf33431e04396d7a0f63a0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cba9734dec214dc59acee3e8a1d0d2e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMainTCPserver.html#a4cba9734dec214dc59acee3e8a1d0d2e">report_state</a> ()</td></tr>
<tr class="separator:a4cba9734dec214dc59acee3e8a1d0d2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a9e39f5c893874d3c77d13aeeeeaabf9b"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMainTCPserver.html#a9e39f5c893874d3c77d13aeeeeaabf9b">read_rx</a> (void)</td></tr>
<tr class="separator:a9e39f5c893874d3c77d13aeeeeaabf9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac59dcaa5cfe2609836107a29a72521a6"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMainTCPserver.html#ac59dcaa5cfe2609836107a29a72521a6">proc_rx</a> (void)</td></tr>
<tr class="separator:ac59dcaa5cfe2609836107a29a72521a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0ef17e3f48b3e9cdc71da3be5055844"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMainTCPserver.html#ac0ef17e3f48b3e9cdc71da3be5055844">create_getstate_json</a> ()</td></tr>
<tr class="separator:ac0ef17e3f48b3e9cdc71da3be5055844"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8039a32508d0fb52865402e0d77a55d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMainTCPserver.html#af8039a32508d0fb52865402e0d77a55d">create_getpid_json</a> ()</td></tr>
<tr class="separator:af8039a32508d0fb52865402e0d77a55d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f3477ec69aaa5405eb5459ced0546a0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMainTCPserver.html#a7f3477ec69aaa5405eb5459ced0546a0">create_setpid_json</a> (bool SetPid)</td></tr>
<tr class="separator:a7f3477ec69aaa5405eb5459ced0546a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe8cd407b9fe72cf06e150083e324de8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMainTCPserver.html#abe8cd407b9fe72cf06e150083e324de8">create_setmainpower_json</a> (bool SetMainPower)</td></tr>
<tr class="separator:abe8cd407b9fe72cf06e150083e324de8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-methods"></a>
Static Private Member Functions</h2></td></tr>
<tr class="memitem:afd9b6b30e249d98ac64f5a1b1654e0aa"><td class="memItemLeft" align="right" valign="top">static void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMainTCPserver.html#afd9b6b30e249d98ac64f5a1b1654e0aa">call_member_function</a> (void *arg)</td></tr>
<tr class="separator:afd9b6b30e249d98ac64f5a1b1654e0aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a4f074b5d93292d76af09f0f847c44783"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMainTCPserver.html#a4f074b5d93292d76af09f0f847c44783">listen_fd</a></td></tr>
<tr class="separator:a4f074b5d93292d76af09f0f847c44783"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a5ee37dae4615cacc85d355f627e4bb"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMainTCPserver.html#a0a5ee37dae4615cacc85d355f627e4bb">comm_fd</a></td></tr>
<tr class="separator:a0a5ee37dae4615cacc85d355f627e4bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add5eed1686000a8b487cf3e81ed17322"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMainTCPserver.html#add5eed1686000a8b487cf3e81ed17322">reporter</a></td></tr>
<tr class="separator:add5eed1686000a8b487cf3e81ed17322"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e5955d127f33df69b4da5a4bb8f4a9b"><td class="memItemLeft" align="right" valign="top">struct sockaddr_in&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMainTCPserver.html#a0e5955d127f33df69b4da5a4bb8f4a9b">servaddr</a></td></tr>
<tr class="separator:a0e5955d127f33df69b4da5a4bb8f4a9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b526ae85fc3aa74aa41ac2eaa6f849f"><td class="memItemLeft" align="right" valign="top">pthread_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMainTCPserver.html#a1b526ae85fc3aa74aa41ac2eaa6f849f">tcp_listener</a></td></tr>
<tr class="separator:a1b526ae85fc3aa74aa41ac2eaa6f849f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadac9409060df7ca12f2f781cf2d1452"><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMainTCPserver.html#aadac9409060df7ca12f2f781cf2d1452">TX_buffer</a> [300]</td></tr>
<tr class="separator:aadac9409060df7ca12f2f781cf2d1452"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39dd2c02d0f4825d8b1e28a118c4c7fd"><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMainTCPserver.html#a39dd2c02d0f4825d8b1e28a118c4c7fd">RX_buffer</a> [300]</td></tr>
<tr class="separator:a39dd2c02d0f4825d8b1e28a118c4c7fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="aef457361bedaa032377a04bd12e6c6e6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">MainTCPserver::MainTCPserver </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>port</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>it creates a tcp lisener server, what is gonna listen to the incomming datas from the client application for further information about it please check: <a href="http://www.paulgriffiths.net/program/c/echoserv.php">http://www.paulgriffiths.net/program/c/echoserv.php</a></p>
<p>the listernet port where the server will listen to the connecting client </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="afd9b6b30e249d98ac64f5a1b1654e0aa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void * MainTCPserver::call_member_function </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>arg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>this loop runs in the background and listens to connecting client</p>
<p>the function is called when the new thread is created,</p>
<p>-the read_rx function waits to the connecting clients, and creates the connection, and puts the incoming package to the RX buffer -the proc_rx is a state machine what processes the string from the RX buffer, executes the required operation, and sends back the answer</p>
<ul>
<li>a pointer what points on the class whats member is this function </li>
</ul>

</div>
</div>
<a class="anchor" id="af8039a32508d0fb52865402e0d77a55d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void MainTCPserver::create_getpid_json </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>creates the string about the parameters of the <a class="el" href="classPID.html">PID</a> contoller and loads it into the TX_buffer </p>

</div>
</div>
<a class="anchor" id="ac0ef17e3f48b3e9cdc71da3be5055844"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void MainTCPserver::create_getstate_json </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>this function creates the JSON string about the state of the system what includes -raw gyroscope data -raw accelerometer data -Kalman filtered orientation data -altitude -main power switch state -PWM signals on the motors</p>
<p>It loads the JSON string into the TX_buffer </p>

</div>
</div>
<a class="anchor" id="abe8cd407b9fe72cf06e150083e324de8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void MainTCPserver::create_setmainpower_json </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>SetMainPower</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>creates the feedback string about modifying the main power switch state </p>

</div>
</div>
<a class="anchor" id="a7f3477ec69aaa5405eb5459ced0546a0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void MainTCPserver::create_setpid_json </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>SetPid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>creates the feedback string about modifying the <a class="el" href="classPID.html">PID</a> controller's parameters </p>

</div>
</div>
<a class="anchor" id="ac59dcaa5cfe2609836107a29a72521a6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void * MainTCPserver::proc_rx </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>converting input str to JSON obj, and processing the input</p>
<p>the passible message types are: -GetState - the raspberry sends back the debug informations, (motor state, angle, gyroscope, accelerometer data, power switch state) -GetPID - the raspberry sends back the <a class="el" href="classPID.html">PID</a> controller's parameters -SetPID - the raspberry refreshes the <a class="el" href="classPID.html">PID</a> controller's paramters according to the incoming JSON string -SetMainPower - the raspberry refreshes </p>

</div>
</div>
<a class="anchor" id="a9e39f5c893874d3c77d13aeeeeaabf9b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void * MainTCPserver::read_rx </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>receiving the input string from socket, and read it into the RX buffer of the server</p>
<p>no parameter </p>

</div>
</div>
<a class="anchor" id="a4cba9734dec214dc59acee3e8a1d0d2e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void MainTCPserver::report_state </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>send the state of the system, if it has any connected peer</p>
<p>It calls the create_getstate_json function to create the JSON string about the system's state and load into TX_buffer Writes the contain of TX_buffer into the connected socket </p>

</div>
</div>
<a class="anchor" id="ac913d78d1e58776e4590d69d9d7e57e2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int MainTCPserver::start_listening </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>creating a new thread and, starting linstening in the background, and it is gonna what for the incomming packages</p>
<p>this solution maybe seems weird, for further information check the description of phtread </p>

</div>
</div>
<a class="anchor" id="a981dcda43bf33431e04396d7a0f63a0e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int MainTCPserver::stop_listening </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>stop listening, and closeing the thread </p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a0a5ee37dae4615cacc85d355f627e4bb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int MainTCPserver::comm_fd</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a4f074b5d93292d76af09f0f847c44783"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int MainTCPserver::listen_fd</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="add5eed1686000a8b487cf3e81ed17322"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int MainTCPserver::reporter</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a39dd2c02d0f4825d8b1e28a118c4c7fd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">char MainTCPserver::RX_buffer[300]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a0e5955d127f33df69b4da5a4bb8f4a9b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">struct sockaddr_in MainTCPserver::servaddr</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a1b526ae85fc3aa74aa41ac2eaa6f849f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">pthread_t MainTCPserver::tcp_listener</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aadac9409060df7ca12f2f781cf2d1452"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">char MainTCPserver::TX_buffer[300]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="TCP__server_8h_source.html">TCP_server.h</a></li>
<li><a class="el" href="TCP__server_8cpp.html">TCP_server.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
